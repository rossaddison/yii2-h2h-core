
<?php
use yii\helpers\Html;
use yii\helpers\Url;
use frontend\modules\invoice\application\models\ci\Mdl_settings;
use yii\helpers\ArrayHelper;
use frontend\modules\invoice\application\models\Salesinvoice;
use frontend\modules\invoice\application\models\SalesinvoiceStatus;
use kartik\grid\GridView;
use kartik\widgets\SwitchInput;
use kartik\icons\Icon;
/* @var $this yii\web\View */
/* @var $searchModel frontend\models\SalesinvoiceSearch */
/* @var $dataProvider yii\data\ActiveDataProvider */
$mdl_settings = new Mdl_settings();
$mdl_settings->load_settings();
$this->params['breadcrumbs'][] = ['label' => Yii::t('app','Customer Debt'), 'url' => Yii::getAlias('@web').'/product/index'];
$this->params['breadcrumbs'][] = ['label' => Yii::t('app','Daily Cleans'), 'url' => Yii::getAlias('@web').'/salesorderheader/index'];
$this->params['breadcrumbs'][] = ['label' => Yii::t('app','Sales Invoice'), 'url' => ['salesinvoice/index']];
$this->params['breadcrumbs'][] = ['label' => Yii::t('app','Sales Invoice Payment'), 'url' => ['salesinvoicepayment/index']];
$this->params['breadcrumbs'][] = ['label' => Yii::t('app','Sales Invoice Settings'), 'url' => ['ip/settings']];
if ($mdl_settings->get_setting('mark_invoices_sent_pdf') == 1 ) {
   $this->params['breadcrumbs'][] = ['label' => Yii::t('app','Must Open Pdf (not Email) to mark as sent'),'url' => ['ip/settings'],'data-toggle'=>'tooltip',
       'title'=>Yii::t('app','Customers can only view invoices online that are marked as sent. Pdf archiving occurs automatically when emailing and invoices are automatically marked as sent. If we choose not to email, by default, invoices must still be marked as sent so they can be viewed by customers. So instead of emailing them, just archive them by pdf generation via Sales Invoices and the user will be able to view them online. The current setting means that Pdfs have to be generated by clicking on the invoice number under the Archive And Mark As Sent Column in order to be marked as sent.')];
}else{
   $this->params['breadcrumbs'][] = ['label' => Yii::t('app','Must Email (not Open Pdf) to mark as sent.'), 'url' => ['ip/settings'],'data-toggle'=>'tooltip',
       'title'=>Yii::t('app','Customers can only view invoices online that are marked as sent. Pdf archiving occurs automatically when emailing and invoices are automatically marked as sent. If we choose not to email, by default, invoices must still be marked as sent so they can be viewed by customers. So instead of emailing them, just archive them by pdf generation via Sales Invoices and the user will be able to view them online. The current setting means that Emailing must occur in order for Pdfs to be generated, archived, and to be marked as sent. This is done by clicking on the email symbol.')];
}
$this->params['breadcrumbs'][] = ['label' =>'','template'=>Icon::show('info-circle', ['framework' => Icon::FAS])];
$tooltipstatus = Html::tag('span', Yii::t('app','Status'), ['title'=>Yii::t('app','Status of the invoice. '),'data-toggle'=>'tooltip','style'=>'text-decoration: underline: cursor:pointer;']);
?>

<div class="main-area">   
<div class="salesinvoice-index">

    <h1><?= Html::encode($this->title) ?></h1>

    <?php // echo $this->render('_search', ['model' => $searchModel]); ?>
    <?php
       echo SwitchInput::widget(['name'=>'status_1', 
                                 'value'=>$mdl_settings->get_setting('mark_invoices_sent_pdf') == 0 ? true : false,
                                 'pluginOptions' => [
                                    'size' => 'small',
                                    'onColor' => 'success',
                                    'offColor' => 'danger',
                                    'offText'=>Yii::t('app','Archive to mark as Sent'),
                                    'onText'=>Yii::t('app','Email to mark as Sent'),
                                ],
                                'pluginEvents' => [
                                        "switchChange.bootstrapSwitch" => 'function() { 
                                            $.ajax({
                                              url: "'.Url::to(['@web/invoice/salesinvoice/switch']).'",                                              
                                          })
                                        }',
                                ],
                                ]);
    ?>
    <br>    
    <?= GridView::widget([
        'dataProvider' => $dataProvider,
        'filterModel' => $searchModel,
        'columns' => [
            [   'class' => 'kartik\grid\DataColumn',
                'attribute' => 'Email',
                'header'=>Yii::t('app','Email'),
                'hAlign' => 'centre', 
                'vAlign' => 'middle',
                'format' => 'raw',
                'value' => function ($dataProvider) {
                //https://fontawesome.com/icons?s=solid  
                return '<a href="'.Url::to(['mailer/invoice','invoice_id'=>$dataProvider->invoice_id]) .'">'.Icon::show('envelope', ['framework' => Icon::FAS]).'</a>';               
              }
            ],  
            [
                'class' => 'kartik\grid\ActionColumn',
                'template' => '{link}',// can be omitted, as it is the default
                'header'=> $mdl_settings->get_setting('mark_invoices_sent_pdf') == 1 ? Yii::t('app','Archive and Mark as Sent') : Yii::t('app','View Pdf'),
                'buttons' => ['link' => function ($url, $dataProvider,$key) {
                               return Html::a($dataProvider->invoice_id,$url);
                    }
                 ],
                'urlCreator' => function ($action, $dataProvider, $key, $index) {
                             if (($action === 'link') ) {
                                 $url = Url::toRoute(['salesinvoice/pdf','id'=>$dataProvider->invoice_id]);
                                 return $url;
                             }
                 }                
            ],
            [
                 'class' => 'kartik\grid\ActionColumn',
                 'dropdown' => false,
                 'header'=>'View',
                 'vAlign'=>'middle',
                 'template'=> '{view}',
            ],        
            [
                'class' => 'kartik\grid\ExpandRowColumn',
                'header'=>'Html',
                'expandTitle'=> 'Html',
                //https://fontawesome.com/icons?s=solid     
                'expandIcon' => Icon::show('file-invoice', ['framework' => Icon::FAS]),
                'value' => function ($dataProvider, $key, $index, $column) {
                     return GridView::ROW_COLLAPSED;
                },
                'disabled'=> function ($dataProvider, $key, $index, $column) {
                                return false;
                },
                'detail' => function ($dataProvider, $key, $index, $column) {
                    return Yii::$app->controller->renderPartial('viewinvoice', ['model' => $dataProvider]);
                },
                'headerOptions' => ['class' => 'kv-sticky-column'],
                'contentOptions' => ['class' => 'kv-sticky-column'],
                'expandOneOnly' => true,
            ], 
            [
                'class'=>'kartik\grid\DataColumn',
                'header'=>'Firstname',
                'vAlign' => 'middle',       
                'attribute'=>'name',
                'value' => function ($dataProvider) {
                        return $dataProvider->customerdetails->name; 
                },
            ],               
            [
                'class'=>'kartik\grid\DataColumn',
                'header'=>'Surname',
                'vAlign' => 'middle',       
                'attribute'=>'surname',
                'value' => function ($dataProvider) {
                        return $dataProvider->customerdetails->surname; 
                },
            ],
            [
                'class' => 'kartik\grid\DataColumn',
                'attribute' => 'invoice_status_id',
                'value' => function ($dataProvider) {
                    return $dataProvider->status->code_meaning; 
                },
                'header'=>$tooltipstatus,
                'hAlign' => 'right', 
                'vAlign' => 'middle',
                'width' => '7%',
                'pageSummary' => false,
                'filterType'=>GridView::FILTER_SELECT2,
                'filter'=>Arrayhelper::map(SalesinvoiceStatus::find()->orderBy('id')->asArray()->all(),'id','code_meaning'),
                'filterInputOptions' => [
                  'class'=> 'form-control',
                  'placeholder' => Yii::t('app','Status...'),
                ],     
                'filterWidgetOptions'=>[
                       'pluginOptions'=>['allowClear'=>true],
                ],                             
            ],            
            [
                'class' => 'kartik\grid\BooleanColumn',
                'attribute'=>'is_read_only',
                'vAlign' => 'middle',
                'trueLabel'=>Yii::t('app','Read Only'),
                'falseLabel'=>Yii::t('app','Updateable'),         
                'value' => function ($dataProvider) {
                               return $dataProvider->is_read_only; 
                },
                'filterType'=>GridView::FILTER_SELECT2,
                //https://github.com/kartik-v/yii2-grid/issues/45
                'filterWidgetOptions' => [
                    'options' => ['placeholder'=>Yii::t('app','Choose')],
                    'pluginOptions' => [
                        'allowClear' => true
                    ],                    
                ],      
            ],
            ['class' => '\kartik\grid\EditableColumn',
                'attribute' =>'reference',
                'value'=> function ($dataProvider){
                    if (empty($dataProvider->reference)) return '??';
                    if (!empty($dataProvider->reference)) return $dataProvider->reference;
                },
                'filterInputOptions' => [
                  'class'=> 'form-control',
                  'placeholder' => Yii::t('app','Ref...'),
                ],   
                'hAlign' => 'right',
                'vAlign' => 'middle',
                'refreshGrid'=>true,
                'readonly' => function($dataProvider) {if ($dataProvider->is_read_only) return true; else return false;},
                'editableOptions' => [
                    'asPopover' => false,
                    'size' => 'sm',
                    'inputType' => \kartik\editable\Editable::INPUT_TEXT,
                    'options' => [
                        'pluginOptions' => ['autoclose' => true],                        
                     ]
                ],
            ],                   
            [ 
                'class'=>'kartik\grid\DataColumn',
                'vAlign' => 'middle',                   
                'attribute'=>'invoice_time_created',
            ],
            [
                'class' => 'kartik\grid\EditableColumn',
                'header' => Yii::t('app','Created'),
                'attribute' =>  'invoice_date_created',
                'filter'=> Html::activeDropDownList($searchModel,'invoice_date_created',ArrayHelper::map(Salesinvoice::find()->orderBy('invoice_date_created')->asArray()->all(),'invoice_date_created','invoice_date_created'),['class'=>'form-control','prompt'=>'Date...']),      
                'hAlign' => 'right',
                'vAlign' => 'middle',
                'format' => ['date', 'php:Y-m-d'],
                'refreshGrid'=>true,
                'headerOptions' => ['class' => 'kv-sticky-column'],
                'contentOptions' => ['class' => 'kv-sticky-column'],
                'readonly' => function($dataProvider) {if ($dataProvider->is_read_only) return true; else return false;},
                'editableOptions' => [
                    'asPopover' => false,
                    'size' => 'sm',
                    'inputType' => \kartik\editable\Editable::INPUT_WIDGET,
                    'widgetClass' =>  'kartik\datecontrol\DateControl',
                    'options' => [
                        'type' => \kartik\datecontrol\DateControl::FORMAT_DATE,
                        'displayFormat' => 'php:Y-m-d',
                        'saveFormat' => 'php:Y-m-d',
                        'options' => [
                            'pluginOptions' => [
                                'autoclose' => true
                            ]
                        ]
                    ]
                ],
            ],
            [ 
                'class'=>'kartik\grid\DataColumn',
                'vAlign' => 'middle',                   
                'attribute'=>'invoice_date_modified',
            ],
            [ 
                'class'=>'kartik\grid\DataColumn',
                'vAlign' => 'middle',
                'header'=> 'Payment due after '. Html::a($mdl_settings->get_setting('invoices_due_after','',false), Url::toRoute(['ip/settings'])). Yii::t('app',' days'),
                'attribute' =>'invoice_date_due',
            ],    
            [
                'class'=>'kartik\grid\DataColumn',
                'header'=>Yii::t('app','Total'),
                'hAlign' => 'right',
                'vAlign' => 'middle',
                //see public variable invoice_total in view salesinvoicesearch.php
                'attribute'=>'invoice_total',
                'value' => function ($dataProvider) {
                        return $dataProvider->salesinvoiceamount->invoice_total; 
                }, 
            ],
            [
                'class'=>'kartik\grid\DataColumn',
                'header'=>'Paid',
                'hAlign' => 'right',
                'vAlign' => 'middle',
                'attribute'=>'invoice_paid',
                'value' => function ($dataProvider) {
                        //return $dataProvider->salesinvoiceamount->invoice_paid;
                        $totalpaid = $dataProvider->salesinvoicetotalpaid;
                        if (empty($totalpaid)){$totalpaid=0;} 
                        return Yii::$app->formatter->asDecimal($totalpaid, 2);
                }, 
            ],       
            [
                'class'=>'kartik\grid\DataColumn',
                'header'=>Yii::t('app','Balance'),
                'hAlign' => 'right',
                'vAlign' => 'middle',
                'attribute'=>'invoice_balance',
                'value' => function ($dataProvider) {
                        //return $dataProvider->salesinvoiceamount->invoice_balance; 
                        $total = $dataProvider->salesinvoiceamount->invoice_total;
                        //this relation in the model sums up the table salesinvoicepayments
                        $paid = $dataProvider->salesinvoicetotalpaid;
                        $balance = $total - $paid;
                        return Yii::$app->formatter->asDecimal($balance, 2);
                },
            ],            
            [
                'class'=>'kartik\grid\DataColumn',
                'header'=>Yii::t('app','Pay with:'),
                'vAlign' => 'middle',
                'attribute'=>'payment_method_name',
                'value' => function ($dataProvider) {
                        return $dataProvider->paymentmethod->payment_method_name; 
                },                
            ],
            [
                'class' => 'kartik\grid\ExpandRowColumn',
                'header'=>Yii::t('app','Payments'),
                'expandTitle'=> Yii::t('app','Payments'),
                'attribute'=>'invoice_id',
                //https://fontawesome.com/icons?s=solid  
                //FAS = font awesome solid
                'expandIcon' => Icon::show('money-bill', ['framework' => Icon::FAS]),
                'value' => function ($dataProvider, $key, $index, $column) {
                     return GridView::ROW_COLLAPSED;
                },
                'disabled'=> function ($dataProvider, $key, $index, $column) {
                                $rows  = $dataProvider->salesinvoicepayments;
                                if (!empty($rows)) { return false;} else { return true;}
                },
                'detail' => function ($dataProvider, $key, $index, $column) {
                    return Yii::$app->controller->renderPartial('viewinvoicepayments', ['model' => $dataProvider]);
                },  
                'headerOptions' => ['class' => 'kv-sticky-column'],
                'contentOptions' => ['class' => 'kv-sticky-column'],
                'expandOneOnly' => true,
            ],                   
        ],
    ]); ?>
</div>
</div>